---
- name: Ensure bash, OpenSSl, and libssl are the latest versions
  apt:  
    name: "{{ item }}"
    update_cache: true
    state: latest
  with_items:
    - bash
    - openssl
    - libssl-dev
    - libssl-doc
    - python3-pip
    - lsb-release
  tags: packages

- name: Install  python package.
  pip:
    name: psycopg2

- name: Add postgres to source list
  shell: echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -sc)-pgdg main" > /etc/apt/sources.list.d/pgdg.list

- name: add postgres key 
  shell: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
  command_warnings: False

- name: Install PostgreSQL
  apt:
    name: "{{ item }}"
    update_cache: true
    state: present
  with_items:
    - postgresql-10
    # - postgresql-contrib
    - libpq-dev
    - python-psycopg2
  tags: packages


- name: copy pg_hba.conf
  copy:
    src: pg_hba.conf
    dest: /etc/postgresql/10/main/pg_hba.conf
    owner: postgres
    group: postgres
    mode: 0640

- name: copy postgresql.conf
  copy:
    src: postgresql.conf
    dest: /etc/postgresql/10/main/postgresql.conf
    owner: postgres
    group: postgres
    mode: 0640



- name: Ensure the PostgreSQL service is running
  service:  
    name: postgresql
    state: restarted
    enabled: yes

# - name: Ensure database is created
#   #sudo_user: postgres
#   postgresql_db:  
#     name: "{{ db_name }}"
#     encoding: 'UTF-8'
#     lc_collate: 'en_US.UTF-8'
#     lc_ctype: 'en_US.UTF-8'
#     template: 'template0'
#     state: present

# - name: Ensure user has access to the database
#   sudo_user: postgres
#   postgresql_user: 
#     db: "{{ db_name }}"
#     name: "{{ db_user }}"
#     password: "{{ db_password }}"
#     priv: ALL
#     state: present